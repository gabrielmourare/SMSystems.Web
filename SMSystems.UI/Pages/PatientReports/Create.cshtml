@page
@model SMSystems.UI.Pages.PatientReports.CreateModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h4>Gerar Prontuário</h4>
<hr />
<div class="container">
    <div class="table-responsive">
        <div class="row justify-content-center mb-3">
            <div class="col-md-6 col-sm-12 mb-2">
                <form method="post" id="formProntuario">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    @if (Model.PatientExists)
                    {
                        <input hidden asp-for="PatientIdSelected" />
                        <div class="form-group">
                            <label class="control-label">Paciente</label>
                            <input asp-for="PatientName" class="form-control" readonly />
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            <label asp-for="PatientIdSelected" class="control-label"></label>
                            <select asp-for="PatientIdSelected" class="form-control" asp-items="@(ViewData["PatientIDSelected"] as SelectList)">
                                <option value="">Selecione um paciente</option>
                            </select>


                        </div>
                    }

                    <div class="form-group">
                        <label asp-for="PatientReport.ReportDate" class="control-label"></label>
                        <input asp-for="ReportDate" type="date" class="form-control" />
                        <span asp-validation-for="PatientReport.ReportDate" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="PatientReport.Content" class="control-label"></label>
                        <input type="hidden" asp-for="PatientReport.Content" id="contentJson" />
                        <div id="editor">
                        </div>
                        <span asp-validation-for="PatientReport.Content" class="text-danger"></span>
                    </div>
                    <div class="mb-2 w-100">
                        <input type="submit" value="Gerar Prontuário" class="btn btn-primary w-100 w-md-auto" />
                    </div>
                    <div class="mb-2 w-100">
                        <a class="btn btn-secondary w-100 w-md-auto" asp-page="Index" asp-route-patientId="@Model.PatientIdSelected">Voltar</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

    }

    <!-- Include stylesheet -->
    <link href="https://cdn.jsdelivr.net/npm/quill@2.0.2/dist/quill.snow.css" rel="stylesheet" />
    <!-- Include the Quill library -->
    <script src="https://cdn.jsdelivr.net/npm/quill@2.0.2/dist/quill.js"></script>

    <!-- Initialize Quill editor -->
    <script>
        const quill = new Quill('#editor', {
            theme: 'snow'
        });

            // Ao submeter o formulário, atualiza o campo oculto com o conteúdo do Quill em formato Delta
        document.querySelector('form').onsubmit = function () {
            var delta = quill.getContents(); // Obtém o conteúdo do editor no formato Delta
            document.getElementById('contentJson').value = JSON.stringify(delta); // Converte para JSON e salva no campo oculto
        };

    </script>

}
